C51 COMPILER V9.56.0.0   USART                                                             03/23/2020 16:48:30 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN ..\OBJ\usart.obj
COMPILER INVOKED BY: D:\Program_File\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\USART\usart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.
                    -.\HARDWARE;..\SYSTEM;..\HARDWARE\USART;..\HARDWARE\LED) DEBUG OBJECTEXTEND PRINT(.\Listings\usart.lst) OBJECT(..\OBJ\usa
                    -rt.obj)

line level    source

   1          #include "usart.h"
   2          
   3          unsigned char R_X = 0; 
   4          unsigned char idata str[6] = {0x39,0x00,0x00,0x00,0x00,0x39};
   5          
   6          /*******************************************************************************
   7          * 函数名         : UART_Init
   8          * 功能                         : 初始化串口
   9          * 输入                         ：无
  10          * 输出                         : 无
  11          *******************************************************************************/
  12          void UART_Init() 
  13          {  
  14   1              TMOD|=0X20;     //定时器1定时器方式 工作模式2
  15   1              SCON=0X51;              //选择工作模式1使能接收，允许发送，允许接收 
  16   1              EA=1;                   //开总中断  
  17   1              ES=1;                   //开串口中断
  18   1              ET1=0;                  //开定时器中断    
  19   1              PCON=0X80;              //8位自动重载，波特率加倍    
  20   1              TH1=0XFA;               //波特率9600
  21   1              TL1=0XFA; 
  22   1              TR1=1;                  //打开定时器1
  23   1      }
  24          
  25          
  26          /*******************************************************************************
  27          * 函数名         : UART_Putch
  28          * 功能                         : 发送一帧数据
  29          * 输入                         ：数组地址
  30          * 输出                         : 无
  31          *******************************************************************************/
  32          void UART_Putch(uchar idata *dat)  
  33          {
  34   1         uchar i;
  35   1         for(i=0 ;i<6;i++)    
  36   1         {
  37   2                              SBUF=dat[i];            //把数据送到sbuf缓冲器中                                         
  38   2                              while(TI!=1);           //等待发送完成
  39   2                              TI=0;                           //T1清零
  40   2              }
  41   1      }
  42          
  43          /*******************************************************************************
  44          * 函数名         : UART_IRQHandler
  45          * 功能                         : 串口中断服务函数，接收一帧数据
  46          * 输入                         : 无
  47          * 输出                         : 无
  48          *******************************************************************************/
  49          void UART_IRQHandler() interrupt 4 
  50          {
  51   1       
  52   1                if(RI==1)                     //收到数据
  53   1                {
C51 COMPILER V9.56.0.0   USART                                                             03/23/2020 16:48:30 PAGE 2   

  54   2                              R_X=SBUF;
  55   2                              if(R_X==0x23)
  56   2                              {  
  57   3                                      UART_Putch(str);
  58   3                                      RI=0;
  59   3                              }
  60   2                              else
  61   2                              {
  62   3                                      RI=0;
  63   3                              }
  64   2                }
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     88    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =      6    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
