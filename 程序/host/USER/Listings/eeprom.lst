C51 COMPILER V9.56.0.0   EEPROM                                                            03/31/2020 18:12:54 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN ..\OBJ\eeprom.obj
COMPILER INVOKED BY: D:\Program_File\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\EEPROM\eeprom.c OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\HARDWARE;..\SYSTEM;..\HARDWARE\DISPLAY;..\HARDWARE\USART;..\HARDWARE\TIM;..\HARDWARE\KEY;..\HARDWARE\EEPROM) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\eeprom.lst) OBJECT(..\OBJ\eeprom.obj)

line level    source

   1          /************************************************************
   2          *
   3          *                       使用的芯片为AT24C02
   4          *                        器件写入地址0xA0
   5          *                        器件读取地址0xA1
   6          *
   7          ************************************************************/
   8          
   9          #include "eeprom.h"
  10          #include "usart.h"
  11          
  12          /*******************************************************************************
  13          * 函数名             : IIC_Start
  14          * 功能                        : IIC启动信号
  15          * 输入                        : 无
  16          * 输出                        : 无
  17          *******************************************************************************/
  18          void IIC_Start(void)
  19          {
  20   1              IIC_SDA = 1;
  21   1              IIC_SCL = 1;
  22   1              Delay_4us();
  23   1              IIC_SDA = 0;
  24   1              Delay_4us();
  25   1              IIC_SCL = 0;
  26   1      }
  27          
  28          /*******************************************************************************
  29          * 函数名             : IIC_Stop
  30          * 功能                        : IIC停止信号
  31          * 输入                        : 无
  32          * 输出                        : 无
  33          *******************************************************************************/
  34          void IIC_Stop(void)
  35          {
  36   1              IIC_SCL = 0;
  37   1              IIC_SDA = 0;
  38   1              Delay_4us();
  39   1              IIC_SCL = 1;
  40   1              Delay_4us();
  41   1              IIC_SDA = 1;
  42   1      }
  43          
  44          /*******************************************************************************
  45          * 函数名             : IIC_WaitAck
  46          * 功能                        : 等待Ack应答
  47          * 输入                        : 无
  48          * 输出                        : BYTE 1接收应答失败 0接收应答成功
  49          *******************************************************************************/
  50          BYTE IIC_WaitAck(void)
  51          {
  52   1              BYTE errtime = 0;
  53   1              IIC_SDA = 1;
C51 COMPILER V9.56.0.0   EEPROM                                                            03/31/2020 18:12:54 PAGE 2   

  54   1              _nop_();
  55   1              IIC_SCL = 1;
  56   1              _nop_();
  57   1      
  58   1              while (IIC_SDA)
  59   1              {
  60   2                      errtime++;
  61   2                      if(errtime>250)
  62   2                      {               
  63   3                              IIC_Stop();
  64   3                              return 1;
  65   3                      }
  66   2              }
  67   1      
  68   1              IIC_SCL = 0;
  69   1              return 0;
  70   1      }
  71          
  72          /*******************************************************************************
  73          * 函数名             : IIC_Ack
  74          * 功能                        : 产生Ack应答
  75          * 输入                        : 无
  76          * 输出                        : 无
  77          *******************************************************************************/
  78          void IIC_Ack(void)
  79          {
  80   1              IIC_SCL = 0;
  81   1              Delay_4us();
  82   1              IIC_SDA = 0;
  83   1              Delay_4us();
  84   1              IIC_SCL = 1;
  85   1              Delay_4us();
  86   1              IIC_SCL = 0;
  87   1      }
  88          
  89          /*******************************************************************************
  90          * 函数名             : IIC_nAck
  91          * 功能                        : 不产生Ack应答
  92          * 输入                        : 无
  93          * 输出                        : 无
  94          *******************************************************************************/
  95          void IIC_nAck(void)
  96          {
  97   1              IIC_SCL = 0;
  98   1              Delay_4us();
  99   1              IIC_SDA = 1;
 100   1              Delay_4us();
 101   1              IIC_SCL = 1;
 102   1              Delay_4us();
 103   1              IIC_SCL = 0;
 104   1      }
 105          
 106          
 107          /*******************************************************************************
 108          * 函数名             : IIC_Send_Byte
 109          * 功能                        : 发送一个字节
 110          * 输入                        : BYTE dat
 111          * 输出                        : 无
 112          *******************************************************************************/
 113          void IIC_Send_Byte(BYTE dat)
 114          {
 115   1              BYTE t = 0;
C51 COMPILER V9.56.0.0   EEPROM                                                            03/31/2020 18:12:54 PAGE 3   

 116   1              IIC_SCL = 0;
 117   1              for(t=0;t<8;t++)
 118   1              {
 119   2                      IIC_SDA = ((dat&0x80)>>7);
 120   2                      dat <<= 1;
 121   2                      _nop_();
 122   2                      IIC_SCL = 1;
 123   2                      Delay_4us();
 124   2                      IIC_SCL = 0;
 125   2              }
 126   1      }
 127          
 128          /*******************************************************************************
 129          * 函数名             : IIC_Read_Byte
 130          * 功能                        : 读取一个字节
 131          * 输入                        : BYTE ack 1为发送ACK 0为发送nACK
 132          * 输出                        : BYTE
 133          *******************************************************************************/
 134          BYTE IIC_Read_Byte(BYTE ack)
 135          {
 136   1              BYTE i,receive = 0;
 137   1              for(i=0;i<8;i++)
 138   1              {
 139   2                      IIC_SCL = 0;
 140   2                      Delay_4us();
 141   2                      IIC_SCL = 1;
 142   2                      receive <<= 1;
 143   2                      if(IIC_SDA==1)
 144   2                      {
 145   3                              receive++;
 146   3                      }
 147   2                      Delay_4us();
 148   2              }
 149   1              if(ack)
 150   1              {
 151   2                      IIC_Ack();
 152   2              }
 153   1              else
 154   1              {
 155   2                      IIC_nAck();
 156   2              }
 157   1              return receive;
 158   1      }
 159          
 160          /*******************************************************************************
 161          * 函数名             : WriteOneByte
 162          * 功能                        : 在24c02的地址为addr写入dat
 163          * 输入                        : 地址addr,数据dat
 164          * 输出                        : 
 165          *******************************************************************************/
 166          void WriteOneByte(uint addr,BYTE dat)
 167          {
 168   1              IIC_Start();
 169   1              IIC_Send_Byte(AT24C02_Write);
 170   1              IIC_WaitAck();
 171   1              IIC_Send_Byte(addr);
 172   1              IIC_WaitAck();
 173   1              IIC_Send_Byte(dat);
 174   1              IIC_WaitAck();
 175   1              IIC_Stop();
 176   1              Delay_nms(20);
 177   1      }
C51 COMPILER V9.56.0.0   EEPROM                                                            03/31/2020 18:12:54 PAGE 4   

 178          
 179          /*******************************************************************************
 180          * 函数名             : ReadOneByte
 181          * 功能                        : 读取24c02的地址为addr中的数据
 182          * 输入                        : 地址addr
 183          * 输出                        : data
 184          *******************************************************************************/
 185          BYTE ReadOneByte(uint addr)
 186          {
 187   1              BYTE temp;
 188   1              IIC_Start();
 189   1              IIC_Send_Byte(AT24C02_Write);
 190   1              IIC_WaitAck();
 191   1              IIC_Send_Byte(addr);
 192   1              IIC_WaitAck();
 193   1              IIC_Start();
 194   1              IIC_Send_Byte(AT24C02_Read);
 195   1              IIC_WaitAck();
 196   1              temp = IIC_Read_Byte(0);
 197   1              IIC_Stop();
 198   1              return temp;
 199   1      }
 200          
 201          /*******************************************************************************
 202          * 函数名             : AT24C02_Check
 203          * 功能                        : 检查24C02是否存有数据
 204          * 输入                        : 
 205          * 输出                        : 0 存有数据，1不存有数据
 206          *******************************************************************************/
 207          uint AT24C02_Check(void)
 208          {
 209   1              BYTE temp;
 210   1              temp=ReadOneByte(255);     
 211   1              if(temp==0X55)
 212   1                      return 0;                  
 213   1              else
 214   1                      return 1;                                                                                         
 215   1      }
 216          
 217          /*******************************************************************************
 218          * 函数名             : WriteVartoRom
 219          * 功能                        : 写入var_tmp中数据到ROM
 220          * 输入                        : ROM中的地址和要写入的数组的地址和大小
 221          * 输出                        : 无
 222          *******************************************************************************/
 223          void WriteVartoRom(uint addr,BYTE* arr,uint SIZE)
 224          {
 225   1              int i;
 226   1              for(i=0;i<SIZE;i++)
 227   1              {
 228   2                      WriteOneByte((addr+i),arr[i]);
 229   2              }
 230   1      }
 231          
 232          /*******************************************************************************
 233          * 函数名             : ReadRomToVar
 234          * 功能                        : 读取ROM中数据到var_tmp
 235          * 输入                        : 要读取ROM中地址，缓存数组的地址和大小
 236          * 输出                        : 无
 237          *******************************************************************************/
 238          void ReadRomToVar(uint addr,BYTE* arr,uint SIZE)
 239          {
C51 COMPILER V9.56.0.0   EEPROM                                                            03/31/2020 18:12:54 PAGE 5   

 240   1              int i;
 241   1              for(i=0;i<SIZE;i++)
 242   1              {
 243   2                      arr[i] = ReadOneByte(addr+i);
 244   2              }
 245   1      }
 246          
 247          /*******************************************************************************
 248          * 函数名             : UpVarTmp
 249          * 功能                        : 更新var_tmp缓存数组
 250          * 输入                        : mode 1 Date to var_tmp  0 var_tmp to Date
 251          * 输出                        : 无
 252          *******************************************************************************/
 253          void UpVarTmp(int mode)
 254          {
 255   1              if(mode==1)                             //更新数据到var_tmp数组中
 256   1              {
 257   2                      var_tmp[0]=time_backup;
 258   2                      var_tmp[1]=time_com1;
 259   2                      var_tmp[2]=time_com2;
 260   2                      var_tmp[3]=time_com3;
 261   2              }
 262   1              else                                            //更新var_tmp数组中的数据到变量中
 263   1              {
 264   2                      time_backup=var_tmp[0];
 265   2                      time_com1=var_tmp[1];
 266   2                      time_com2=var_tmp[2];
 267   2                      time_com3=var_tmp[3];
 268   2              }
 269   1      }
 270          
 271          /*******************************************************************************
 272          * 函数名             : ClearVarTmp
 273          * 功能                        : 清空var_tmp缓存数组
 274          * 输入                        : var_tmp数组大小
 275          * 输出                        : 无
 276          *******************************************************************************/
 277          void ClearVarTmp(uint SIZE)
 278          {
 279   1              int i;
 280   1              for(i=0;i<SIZE;i++)
 281   1              {
 282   2                      var_tmp[i]=0;
 283   2              }
 284   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    504    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
